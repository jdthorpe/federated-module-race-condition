# note that this is run in the openrusty/openresty image and not the standard nginx image (for lua )
# usage 
# user www-data;
# worker_processes auto;
# pid /run/nginx.pid;

# events {
#     worker_connections 768;
#     # multi_accept on;
# }

# http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream react_dev_server {
        server host.docker.internal:3000;
    }

    server {
        server_name _;
        listen 80;

        root /www/containers;


        location ~* ^/container/(?<container>[^/]*)/(?<resource>.*)$ {

            # random delay helps to make race condition clear
            access_by_lua_block { ngx.sleep(math.random(0,1)) }

            root /www/containers;

            # cache busting --- this is ESSENTIAL in development
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;

            try_files /$container/dist/$resource /dev/null =404;
        }

        # react dev server
        location / {
            proxy_pass http://react_dev_server;
        }

        # socket connectoin (live reloads)
        location /sockjs-node {
            proxy_pass http://react_dev_server;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host; # pass the host header - http://wiki.nginx.org/HttpProxyModule#proxy_pass

            proxy_http_version 1.1; # recommended with keepalive connections - http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version

            # WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

    }
# }